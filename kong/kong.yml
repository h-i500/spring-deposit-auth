_format_version: "3.0"
_transform: true

services:
  # === BFF (Quarkus) ===
  - name: mashup-savings-term-deposits
    url: http://mashup-savings-term-deposits:8080
    routes:
      # OIDC コールバック（厳密一致）
      - name: secure-callback
        expression: (http.path == "/secure/callback")
        strip_path: false

      # /secure 配下
      - name: secure-all
        expression: (http.path ^= "/secure")
        strip_path: false

      # /api 配下は strip しない（BFF に /api/... のまま渡す）
      - name: api-all
        expression: (http.path ^= "/api")
        strip_path: false

      # Quarkus の OIDC ログアウト
      - name: oidc-logout
        expression: (http.path == "/q/oidc/logout")
        strip_path: false

  # === /auth/* -> BFF の /secure/* へエイリアス ===
  - name: mstd-auth
    url: http://mashup-savings-term-deposits:8080/secure
    routes:
      - name: auth-all
        expression: (http.path ^= "/auth")
        strip_path: true
        preserve_host: false

  # === Frontend (Vite preview on 5173) ===
  - name: frontend
    url: http://frontend:5173
    routes:
      - name: frontend-app
        expression: (http.path ^= "/app")
        strip_path: false
        preserve_host: false



  # === Balance Inquiry (Quarkus) ===
  - name: mashup-balance-inquiry-only
    url: http://mashup-balance-inquiry-only:9000/api/balances
    routes:
      - name: balance-inquiry-route
        expression: (http.path ^= "/balance-inquiry")
        strip_path: true
    # ← サービス直下にプラグインを付与（名前一致が保証できる）
    plugins:
      - name: jwt
        config:
          key_claim_name: iss
          run_on_preflight: false
          # claims_to_verify: ["exp", "nbf"]
          claims_to_verify: ["exp"]   # ← "nbf" は外す

# （トップレベルの plugins: は削除します。あっても良いですが、下のように service を正しく指す必要があります）
# plugins:
#   - name: jwt
#     service: { name: mashup-balance-inquiry-only }  # ← こう書けばOK（または単に文字列でも可）
#     config: ...

# Consumers はそのままでOKだが、rsa_public_key は「公開鍵（BEGIN PUBLIC KEY）」にする
consumers:
  - username: keycloak
    jwt_secrets:
      # 外部から取得したトークン（iss が localhost の場合）
      - algorithm: RS256
        key: http://localhost:8080/realms/demo-realm  # ← iss と一致させる
        rsa_public_key: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlu4zlzLMfAKu2KZ9g0ys
          U/WdEsH6Dc/a1BjHJzx4S0BJC1QpJKy4zgDm5eO9a7k2v5/hg4qtuSc/sspMPHW9
          meSu6XDrcwFI8CVPtx0KxxXrmZNETM40OrqtYYX9E/Ltppu0wLnaBNOWM5LCAw8x
          zqo/hPvQRcOeMastUaBuWfjxATWugR9qDB69CXdyMJAKG21Zhl6nBNykCB0o+p6s
          XrjVKLLXInJEuzsMTcsrFLxcapwE5rv8OYqWMc0OmbnIdQCOkqKH6/Btavfb5Pzj
          W6+i3Zg7mdztM6dDkWtjbSXxflPn//98DR9Yt8QnzQ/QR8UWMFlQf80+xgGHAxzt
          NQIDAQAB
          -----END PUBLIC KEY-----

      # （任意）コンテナ内部発行のトークン（iss が keycloak の場合）も通すなら追記
      - algorithm: RS256
        key: http://keycloak:8080/realms/demo-realm
        rsa_public_key: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlu4zlzLMfAKu2KZ9g0ys
          U/WdEsH6Dc/a1BjHJzx4S0BJC1QpJKy4zgDm5eO9a7k2v5/hg4qtuSc/sspMPHW9
          meSu6XDrcwFI8CVPtx0KxxXrmZNETM40OrqtYYX9E/Ltppu0wLnaBNOWM5LCAw8x
          zqo/hPvQRcOeMastUaBuWfjxATWugR9qDB69CXdyMJAKG21Zhl6nBNykCB0o+p6s
          XrjVKLLXInJEuzsMTcsrFLxcapwE5rv8OYqWMc0OmbnIdQCOkqKH6/Btavfb5Pzj
          W6+i3Zg7mdztM6dDkWtjbSXxflPn//98DR9Yt8QnzQ/QR8UWMFlQf80+xgGHAxzt
          NQIDAQAB
          -----END PUBLIC KEY-----
