# REST エンドポイントのベース URL（まずは直叩きで）
# savings-api/mp-rest/url=${SAVINGS_BASE_URL:http://savings-service:8081/api}
# time-api/mp-rest/url=${TIME_BASE_URL:http://time-deposit-service:8082/api}

# OIDC クライアント（下流呼び出し用）
quarkus.oidc-client.auth-server-url=${OIDC_ISSUER:http://keycloak:8080/realms/demo-realm}
quarkus.oidc-client.client-id=${OIDC_CLIENT_ID:mashup-client}
quarkus.oidc-client.credentials.secret=${OIDC_CLIENT_SECRET:changeit}
quarkus.oidc-client.grant.type=client

# Keycloak の “discovery” を止めて token エンドポイントを直指定（起動安定化）
quarkus.oidc-client.discovery-enabled=false
quarkus.oidc-client.token-path=/protocol/openid-connect/token

# Quarkus HTTP
quarkus.http.port=9000
quarkus.rest.path=/api


# BFF（公開クライアント/PKCE）
# quarkus.oidc.auth-server-url=http://keycloak:8080/realms/demo-realm
quarkus.oidc.client-id=mashup-savings-term-deposits
# quarkus.oidc.application-type=web-app
# Kong のルーティングに合わせる（kong.yml で /secure/callback を公開）
quarkus.oidc.authentication.redirect-path=/secure/callback



# 受信トークンの検証（リソースサーバ）
quarkus.oidc.auth-server-url=http://keycloak:8080/realms/demo-realm
quarkus.oidc.application-type=service

# /api/balances/* を認証必須に
quarkus.http.auth.permission.balances.paths=/api/balances/*
quarkus.http.auth.permission.balances.policy=authenticated


quarkus.oidc.enabled=false

savings-api/mp-rest/url=http://savings-service:8081/api
time-api/mp-rest/url=http://time-deposit-service:8082/api