{
  "realm": "demo-realm",
  "enabled": true,

  "registrationAllowed": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "verifyEmail": false,
  
  "ssoSessionIdleTimeout": 3600,
  "ssoSessionMaxLifespan": 28800,
  "clientSessionIdleTimeout": 3600,
  "clientSessionMaxLifespan": 28800,
  "accessTokenLifespan": 900,

  "clients": [
    {
      "clientId": "mashup-savings-term-deposits",
      "name": "mashup-savings-term-deposits",
      "protocol": "openid-connect",
      "publicClient": true,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "fullScopeAllowed": true,
      "rootUrl": "http://localhost:8000",
      "baseUrl": "/",
      "redirectUris": [
        "http://localhost:8000/*"
      ],
      "webOrigins": [
        "http://localhost:8000"
      ],
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "oauth2.device.authorization.grant.enabled": "false",
        "post.logout.redirect.uris": "+"
      },
      "defaultClientScopes": [
        "basic",
        "roles",
        "web-origins",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt",
        "acr"
      ]
    }
  ],

  "clientScopes": [
    {
      "name": "basic",
      "description": "Basic OIDC scope (sub, auth_time, etc.)",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true"
      },
      "protocolMappers": []
    },
    {
      "name": "profile",
      "description": "Standard OIDC profile claims",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true"
      },
      "protocolMappers": [
        {
          "name": "given_name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "firstName",
            "claim.name": "given_name",
            "jsonType.label": "String",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "family_name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "lastName",
            "claim.name": "family_name",
            "jsonType.label": "String",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "preferred_username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "username",
            "claim.name": "preferred_username",
            "jsonType.label": "String",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "name": "email",
      "description": "Standard OIDC email claims",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true"
      },
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "email",
            "claim.name": "email",
            "jsonType.label": "String",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "email_verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "emailVerified",
            "claim.name": "email_verified",
            "jsonType.label": "boolean",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "name": "roles",
      "description": "Expose realm roles in access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false"
      },
      "protocolMappers": [
        {
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "false"
          }
        }
      ]
    },
    {
      "name": "web-origins",
      "description": "Expose allowed web origins",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false"
      },
      "protocolMappers": [
        {
          "name": "allowed-origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "name": "address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true"
      },
      "protocolMappers": []
    },
    {
      "name": "phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true"
      },
      "protocolMappers": []
    },
    {
      "name": "offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true"
      },
      "protocolMappers": []
    },
    {
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true"
      },
      "protocolMappers": []
    },
    {
      "name": "acr",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true"
      },
      "protocolMappers": []
    }
  ],

  "defaultDefaultClientScopes": [
    "basic",
    "roles",
    "web-origins",
    "profile",
    "email"
  ],
  "defaultOptionalClientScopes": [
    "address",
    "phone",
    "offline_access",
    "microprofile-jwt",
    "acr"
  ],

  "roles": {
    "realm": [
      {
        "name": "user",
        "description": "Create/deposit/withdraw permissions for savings and time-deposit"
      },
      {
        "name": "read",
        "description": "Read-only permission for savings"
      }
    ]
  },

  "users": [
    {
      "username": "testuser",
      "enabled": true,
      "emailVerified": true,
      "email": "user@example.com",
      "firstName": "Demo",
      "lastName": "User",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "user",
        "read"
      ]
    }
  ]
}
